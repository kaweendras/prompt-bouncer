import { DetectionCategory } from "./types";

/**
 * Built-in detection categories with curated word lists
 */
export const DETECTION_CATEGORIES: Record<string, DetectionCategory> = {
  mild: {
    name: "mild",
    severity: "low",
    description: "Mild swearing and light offensive language",
    keywords: [
      "damn",
      "damned",
      "dammit",
      "hell",
      "hellish",
      "crap",
      "crappy",
      "piss",
      "pissed",
      "suck",
      "sucks",
      "sucked",
      "sucky",
      "stupid",
      "idiot",
      "moron",
      "dumb",
      "dumbass",
      "jerk",
      "jerkoff",
      "loser",
      "freak",
      "weirdo",
      "creep",
      "creepy",
      "lame",
      "wtf",
      "omg",
      "jesus",
      "christ",
      "god",
      "lord",
      "bloody",
      "blimey",
      "bugger",
      "bollocks",
      "fanny",
      "arse",
      "git",
      "sod",
      "turd",
      "poop",
      "fart",
      "farted",
      "farting",
    ],
  },

  profanity: {
    name: "profanity",
    severity: "medium",
    description: "General profanity and offensive language",
    keywords: [
      "ahole",
      "ash0le",
      "ash0les",
      "asholes",
      "ass",
      "assface",
      "assh0le",
      "assh0lez",
      "asshole",
      "assholes",
      "assholz",
      "asswipe",
      "azzhole",
      "bassterds",
      "bastard",
      "bastards",
      "bastardz",
      "basterds",
      "basterdz",
      "biatch",
      "bitch",
      "bitches",
      "bitchy",
      "bitching",
      "butthole",
      "buttwipe",
      "c0ck",
      "c0cks",
      "c0k",
      "cawk",
      "cawks",
      "cock",
      "cockhead",
      "cock-head",
      "cocks",
      "cocksucker",
      "cock-sucker",
      "crap",
      "crappy",
      "crapping",
      "cunt",
      "cunts",
      "cuntz",
      "dick",
      "dicks",
      "dickhead",
      "fag",
      "fag1t",
      "faget",
      "fagg1t",
      "faggit",
      "faggot",
      "fagit",
      "fags",
      "fagz",
      "faig",
      "faigs",
      "fart",
      "fcuk",
      "fuck",
      "fucker",
      "fuckers",
      "fuckin",
      "fucking",
      "fucked",
      "fucks",
      "fuk",
      "fukah",
      "fuken",
      "fuker",
      "fukin",
      "fukk",
      "fukkah",
      "fukken",
      "fukker",
      "fukkin",
      "fux0r",
      "gay",
      "gayboy",
      "gaygirl",
      "gays",
      "gayz",
      "goddamn",
      "goddamned",
      "god-damned",
      "h00r",
      "h0ar",
      "h0re",
      "hells",
      "hoar",
      "hoor",
      "hoore",
      "jackass",
      "jackoff",
      "jerk-off",
      "knob",
      "knobs",
      "knobz",
      "kunt",
      "kunts",
      "kuntz",
      "motha fucker",
      "motha fuker",
      "motha fukkah",
      "motha fukker",
      "mother fucker",
      "mother fukah",
      "mother fuker",
      "mother fukkah",
      "mother fukker",
      "mother-fucker",
      "motherfucker",
      "motherfuckers",
      "motherfucking",
      "mutha fucker",
      "mutha fukah",
      "mutha fuker",
      "mutha fukkah",
      "mutha fukker",
      "pecker",
      "phuc",
      "phuck",
      "phuk",
      "phuker",
      "phukker",
      "prick",
      "pussy",
      "pussies",
      "pusse",
      "pussee",
      "queer",
      "queers",
      "queerz",
      "qweers",
      "qweerz",
      "qweir",
      "retard",
      "scank",
      "schlong",
      "shit",
      "shits",
      "shitter",
      "shitty",
      "shity",
      "shitz",
      "sh1t",
      "sh1ter",
      "sh1ts",
      "sh1tter",
      "sh1tz",
      "shyt",
      "shyte",
      "shytty",
      "shyty",
      "skanck",
      "skank",
      "skankee",
      "skankey",
      "skanks",
      "skanky",
      "slut",
      "sluts",
      "slutty",
      "slutz",
      "son-of-a-bitch",
      "twat",
      "wh00r",
      "wh0re",
      "whore",
      "whores",
      "b!+ch",
      "b17ch",
      "b1tch",
      "bi+ch",
      "b!tch",
      "bullshit",
      "fatass",
      "mofo",
      "nutsack",
      "smut",
      "wank",
      "whoar",
    ],
  },

  explicit: {
    name: "explicit",
    severity: "high",
    description: "Sexually explicit and adult content",
    keywords: [
      "nude",
      "naked",
      "nsfw",
      "explicit",
      "sex",
      "sexy",
      "porn",
      "p0rn",
      "pr0n",
      "adult",
      "erotic",
      "sexual",
      "xxx",
      "xrated",
      "seductive",
      "revealing",
      "topless",
      "underwear",
      "lingerie",
      "bikini",
      "exposed",
      "intimate",
      "masturbation",
      "masturbate",
      "masterbat",
      "masterbate",
      "masterbates",
      "massterbait",
      "masstrbait",
      "masstrbate",
      "masterbaiter",
      "orgasm",
      "orgasim",
      "orgasum",
      "penetration",
      "breast",
      "breasts",
      "boobs",
      "b00bs",
      "nipple",
      "tit",
      "tits",
      "titt",
      "teets",
      "teez",
      "vagina",
      "vag1na",
      "va1jina",
      "vagiina",
      "vaj1na",
      "vajina",
      "vulva",
      "vullva",
      "clit",
      "clits",
      "penis",
      "pen1s",
      "penas",
      "penus",
      "penuus",
      "peenus",
      "peeenusss",
      "peeenus",
      "peinus",
      "penis-breath",
      "genital",
      "testicle",
      "testical",
      "scrotum",
      "horny",
      "aroused",
      "climax",
      "fetish",
      "kinky",
      "submissive",
      "dominant",
      "bondage",
      "blow job",
      "blowjob",
      "boffing",
      "cum",
      "jism",
      "jiss",
      "jizm",
      "jizz",
      "semen",
      "carpet muncher",
      "lesbian",
      "lezzian",
      "anus",
      "rectum",
      "recktum",
      "orifice",
      "oriface",
      "orifiss",
      "orafis",
      "enema",
      "fudge packer",
      "poonani",
      "preteen",
      "screwing",
      "shemale",
      "masochist",
      "masokist",
      "sadist",
      "dominatricks",
      "dominatrics",
      "dominatrix",
      "dyke",
      "felcher",
      "foreskin",
      "queef",
      "sphencter",
      "splooge",
      "wetback",
    ],
  },

  violence: {
    name: "violence",
    severity: "high",
    description: "Violent and harmful content",
    keywords: [
      "kill",
      "murder",
      "death",
      "blood",
      "gore",
      "violence",
      "torture",
      "weapon",
      "gun",
      "knife",
      "bomb",
      "terrorist",
      "suicide",
      "harm",
      "hurt",
      "abuse",
      "assault",
      "attack",
      "destroy",
      "massacre",
      "slaughter",
      "execute",
      "assassinate",
      "strangle",
      "stab",
      "shoot",
      "poison",
      "explosive",
      "warfare",
    ],
  },

  drugs: {
    name: "drugs",
    severity: "medium",
    description: "Drug-related content",
    keywords: [
      "cocaine",
      "heroin",
      "meth",
      "marijuana",
      "weed",
      "cannabis",
      "lsd",
      "ecstasy",
      "molly",
      "crack",
      "opium",
      "morphine",
      "fentanyl",
      "amphetamine",
      "psychedelic",
      "hallucinogen",
      "drug dealer",
      "drug lord",
      "narcotic",
      "overdose",
      "addiction",
    ],
  },

  hate: {
    name: "hate",
    severity: "high",
    description: "Hate speech and discriminatory content",
    keywords: [
      "nazi",
      "nazis",
      "hitler",
      "holocaust",
      "genocide",
      "supremacist",
      "racist",
      "racism",
      "sexist",
      "homophobic",
      "transphobic",
      "bigot",
      "discrimination",
      "prejudice",
      "slur",
      "ethnic cleansing",
      "nigger",
      "nigga",
      "nigur",
      "niiger",
      "niigr",
      "n1gr",
      "chink",
      "g00k",
      "gook",
      "jap",
      "japs",
      "kike",
      "spic",
      "wetback",
      "wop",
      "w0p",
      "daygo",
      "dego",
      "guiena",
      "honkey",
      "injun",
      "kraut",
      "polac",
      "polack",
      "polak",
      "packi",
      "packie",
      "packy",
      "paki",
      "pakie",
      "paky",
    ],
  },

  self_harm: {
    name: "self_harm",
    severity: "high",
    description: "Self-harm and suicide-related content",
    keywords: [
      "suicide",
      "self-harm",
      "cut myself",
      "kill myself",
      "hang myself",
      "off myself",
      "delete myself",
      "terminate myself",
      "self terminate",
      "end my life",
      "suicidal",
      "cutting myself",
      "self-injury",
      "overdose myself to death",
      "self-destruction",
      "self-mutilation",
    ],
  },
};

/**
 * Get all keywords from all categories
 */
export const getAllKeywords = (): string[] => {
  const allKeywords: string[] = [];
  Object.values(DETECTION_CATEGORIES).forEach((category) => {
    allKeywords.push(...category.keywords);
  });
  return [...new Set(allKeywords)]; // Remove duplicates
};

/**
 * Get keywords by category
 */
export const getKeywordsByCategory = (categoryName: string): string[] => {
  return DETECTION_CATEGORIES[categoryName]?.keywords || [];
};

/**
 * Additional international and variant profanity patterns
 */
export const ADDITIONAL_VARIANTS: string[] = [
  // Leetspeak and character substitutions
  "f*ck",
  "sh*t",
  "b*tch",
  "a$$",
  "@$$",
  "f u c k",
  "f u c k e r",
  "s.o.b.",
  "*damn",
  "*dyke",
  "*fuck*",
  "*shit*",
  "bi7ch",
  "bitch*",
  "cock*",
  "cunt*",
  "d4mn",
  "dick*",
  "dike*",
  "fag*",
  "fuk*",
  "h0r",
  "h4x0r",
  "hoer*",
  "kanker*",
  "kusi*",
  "kyrpa*",
  "masturbat*",
  "merd*",
  "nigger*",
  "paska*",
  "pierdol*",
  "pillu*",
  "piss*",
  "pr0n",
  "queef*",
  "scheiss*",
  "sh!t*",
  "b00b*",
  "testicle*",
  "titt*",
  "wank*",
  "wop*",

  // International profanity
  "amcik",
  "andskota",
  "ayir",
  "blyat",
  "cabron",
  "cazzo",
  "chraa",
  "chuj",
  "dupa",
  "dziwka",
  "ekrem",
  "ekto",
  "enculer",
  "faen",
  "fanculo",
  "feces",
  "feg",
  "ficken",
  "fitt",
  "flikker",
  "fotze",
  "futkretzn",
  "helvete",
  "huevon",
  "hui",
  "kanker",
  "kapiri",
  "klootzak",
  "knulle",
  "kuk",
  "kuksuger",
  "kurac",
  "kurwa",
  "kyrpa",
  "lesbo",
  "mamhoon",
  "mibun",
  "monkleigh",
  "mouliewop",
  "muie",
  "mulkku",
  "muschi",
  "nepesaurio",
  "orospu",
  "pajeet",
  "paska",
  "perse",
  "picka",
  "pierdol",
  "pillu",
  "pimmel",
  "piss",
  "pizda",
  "poontsee",
  "poop",
  "pula",
  "pule",
  "puta",
  "puto",
  "qahbeh",
  "rautenberg",
  "schaffer",
  "scheiss",
  "schlampe",
  "schmuck",
  "screw",
  "sharmuta",
  "sharmute",
  "shipal",
  "shiz",
  "skribz",
  "skurwysyn",
  "suka",
  "vittu",
  "wichser",
  "yed",
  "zabourah",

  // Additional variants and patterns
  "ass monkey",
  "butt-pirate",
  "flipping the bird",
  "lipshits",
  "lipshitz",
  "nastt",
  "puuke",
  "puuker",
  "turd",
];

/**
 * Get all keywords from all categories including variants
 */
export const getAllKeywordsWithVariants = (): string[] => {
  const allKeywords: string[] = [];
  Object.values(DETECTION_CATEGORIES).forEach((category) => {
    allKeywords.push(...category.keywords);
  });
  allKeywords.push(...ADDITIONAL_VARIANTS);
  return [...new Set(allKeywords)]; // Remove duplicates
};

/**
 * Get categories by severity level
 */
export const getCategoriesBySeverity = (
  severity: "none" | "low" | "medium" | "high"
): string[] => {
  // If severity is "none", return empty array (no categories)
  if (severity === "none") {
    return [];
  }

  return Object.entries(DETECTION_CATEGORIES)
    .filter(([_, category]) => category.severity === severity)
    .map(([name]) => name);
};

/**
 * Get categories up to a maximum severity level (inclusive)
 */
export const getCategoriesUpToSeverity = (
  maxSeverity: "none" | "low" | "medium" | "high"
): string[] => {
  // If maxSeverity is "none", return empty array (no categories allowed)
  if (maxSeverity === "none") {
    return [];
  }

  const severityOrder = { low: 1, medium: 2, high: 3 };
  const maxLevel = severityOrder[maxSeverity];

  return Object.entries(DETECTION_CATEGORIES)
    .filter(([_, category]) => severityOrder[category.severity] <= maxLevel)
    .map(([name]) => name);
};

/**
 * Get all keywords for categories with specific severity levels
 */
export const getKeywordsBySeverityLevels = (
  severityLevels: ("none" | "low" | "medium" | "high")[]
): string[] => {
  // If "none" is included, return empty array (no keywords allowed)
  if (severityLevels.includes("none")) {
    return [];
  }

  const keywords: string[] = [];

  Object.values(DETECTION_CATEGORIES).forEach((category) => {
    if (severityLevels.includes(category.severity)) {
      keywords.push(...category.keywords);
    }
  });

  return [...new Set(keywords)]; // Remove duplicates
};

/**
 * Get all category names
 */
export const getCategoryNames = (): string[] => {
  return Object.keys(DETECTION_CATEGORIES);
};
